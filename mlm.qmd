---
title: "MLR"
format: html
engine: knitr
knitr:
  opts_chunk: 
    R.options:
      width: 80
editor_options: 
  chunk_output_type: inline
---

```{r}
#| label: setup
#| message: false
library(tidyverse)
library(flextable)
options(paged.print = FALSE)
knitr::opts_chunk$set(width = 80)
```

## Data

```{r}
#| echo: false
# Data for constructed example
set.seed(1234)
df <- data.frame(W = rep(c(FALSE, TRUE), each = 100))  |> 
  mutate(
    X = .5 + 2 * W + rnorm(200),
    Y = -.5 * X + 4 * W + 1 + rnorm(200)
    )
```

```{r}
df2 <- df |> 
  group_by(W) |> 
  mutate(
    mean_X = mean(X), 
    mean_Y = mean(Y)
    )  |> 
  ungroup()
```

```{r}
df2
```

```{r}
df2 |> 
  ggplot(
    mapping = aes(x = X, y = Y)
    ) +
  geom_point(
    size = 3
  ) +
  geom_smooth(
    formula = 'y ~ x',
    method = lm, 
    se = FALSE, 
    color = 'blue'
    )
```

```{r}
df2 |> 
  mutate(W = fct(as.character(W))) |> 
  ggplot(
    mapping = aes(x = X, y = Y),
    ) +
  geom_point(
    mapping = aes(colour = W),
    size = 3
  ) +
  geom_smooth(
    formula = 'y ~ x',
    method = lm, 
    se = FALSE, 
    color = 'blue'
    )
```

```{r}
df2 |> 
  mutate(W = fct(as.character(W))) |> 
  ggplot(
    mapping = aes(x = X, y = Y),
    ) +
  geom_point(
    mapping = aes(colour = W),
    size = 3
  ) +
  geom_smooth(
    formula = 'y ~ x',
    method = lm, 
    se = FALSE, 
    color = 'blue'
    ) +
  facet_wrap(
    ~ W
  )
```

```{r}
cli::console_width()
```

Bare for å vise hva man kan gjøre hvis man trenger å lage et slik diagram (oppdatert kode også i slides)

```{r}
dag1 <- ggdag::dagify(
  Y ~ X + W, X ~ W,
  exposure = "X",
  outcome = "Y"
  )

XYW <- ggplot(
  data = dag1, 
  aes(
    x = x, y = y, 
    xend = xend, 
    yend = yend)
  ) +
  ggdag::geom_dag_point(
    color = 'red2'
    ) +
  ggdag::geom_dag_edges() +
  ggdag::geom_dag_text() +
  ggdag::theme_dag()

XYW
```

```{r}
mtcars |> 
  select(mpg, wt) |> 
  ggplot(mapping = aes(x = wt, y = mpg)) +
  geom_point(size = 3) + 
  geom_smooth(
    method = "lm", 
    formula = "y ~ x", 
    se = FALSE
    ) +
  xlim(0, 6) +
  ylim(0, 35)
```

```{r}
mtcars |> 
  select(mpg, wt, cyl) |> 
  arrange(cyl) |> 
  mutate(
    cyl = fct(as.character(cyl))
  ) |> 
  ggplot(mapping = aes(x = wt, y = mpg)) +
  geom_point(
    mapping = aes(colour = cyl),
    size = 3) + 
  geom_smooth(
    method = "lm", 
    formula = "y ~ x", 
    se = FALSE
    ) +
  xlim(0, 6) +
  ylim(0, 35)
```

```{r}
mtcars |> 
  select(mpg, wt, cyl) |> 
  arrange(cyl) |> 
  mutate(
    cyl = fct(as.character(cyl))
  ) |> 
  ggplot(mapping = aes(x = wt, y = mpg)) +
  geom_point(
    mapping = aes(colour = cyl),
    size = 3) + 
  geom_smooth(
    method = "lm", 
    formula = "y ~ x", 
    se = FALSE
    ) +
  xlim(0, 6) +
  ylim(0, 35) +
  facet_wrap(
    ~cyl
  )
```

## Interaksjon

```{r}
mtcars |> 
  mutate(
    cyl = fct(as.character(cyl), levels = c("4", "6", "8"))
  ) %>%
  lm(formula = 'mpg ~ cyl * wt', data = .) |> 
  as_flextable()
```

```{r}
mtcars_inter <- mtcars |> 
  select(mpg, wt, cyl) |> 
  mutate(
    dum_6cyl = ifelse(cyl == 6, 1, 0),
    dum_8cyl = ifelse(cyl == 8, 1, 0),
    wt_6cyl = wt * dum_6cyl,
    wt_8cyl = wt * dum_8cyl
  )
```

```{r}
lm_inter <- lm(
  formula = 'mpg ~ wt + dum_6cyl + dum_8cyl + wt_6cyl + wt_8cyl',
  data = mtcars_inter
  ) |> 
  as_flextable()
```

```{r}
  lm(
    formula = 'mpg ~ wt + cyl', 
    data = mutate(
      .data = mtcars, 
      cyl = fct(as.character(cyl))
      )
    )  |> 
  car::residualPlots(
    plot = FALSE, 
    tests = TRUE
  ) |> 
  as_tibble(rownames = "Term") |> 
  flextable() |> 
  autofit()
```

```{r}
 lm(
    formula = 'mpg ~ wt + cyl', 
    data = mutate(
      .data = mtcars, 
      cyl = fct(as.character(cyl))
      )
    )  |> 
  car::residualPlots(
    plot = TRUE, 
    tests = FALSE
  ) 
```

```{r}
 lm(
    formula = 'mpg ~ wt * cyl', 
    data = mutate(
      .data = mtcars, 
      cyl = fct(as.character(cyl))
      )
    )  |> 
  car::residualPlots(
    plot = TRUE, 
    tests = FALSE
  ) 
```

```{r}
# check help for details, available 
# types are overall ("o"), 
# individual ("i") and both ("b")
lm(
  formula = 'mpg ~ wt + cyl + hp', 
  data = mtcars
  ) |> 
  mctest::mctest(type = "b")
```

100 frihetsgrader 10% signifikansnivå

```{r}
qt(0.95, 100) |>  round(4)
```

```{r}
qt(0.95, 8) |>  round(4)
```

```{r}
qt(0.95, 1000000) |>  round(4)
```

```{r}
campus <- wooldridge::campus |> 
  as_tibble()
```

```{r}
campus <- campus |> 
  mutate(
    rel_police = round(police/enroll *1000, 3),
    rel_crime = round(crime/enroll *1000, 3)
         )
```

```{r}
campus |> 
  lm(
    formula = 'rel_crime ~ rel_police',
    data = _
  ) |> 
  as_flextable()
```

```{r}
campus |> 
  filter(police < 10) |> 
  lm(
    formula = 'rel_crime ~ rel_police',
    data = _
  ) |> 
  as_flextable()
```

```{r}
#| paged.print: true
mtcars
```
