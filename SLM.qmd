---
title: "Simple Linear Regression"
format: html
---

```{r}
#| message: false
#| label: setup
library(tidyverse)
library(wooldridge)
library(flextable)
options(
  paged.print = FALSE
)
```


## Campus

```{r}
campus <- wooldridge::campus
```

```{r}
campus <- campus %>% 
  mutate(
    crime = round((crime/enroll)*1000, 2),
    police = round((police/enroll)*1000, 2))
```



```{r}
# Scatter plot
campus %>% 
  ggplot(
    mapping = aes(
      x = police, 
      y = crime
    )
    ) +
  geom_point() +
  xlab("Police per 1000 students") + 
  ylab("Crimes per 1000 students") +
  theme(
    axis.text = element_text(size = 11),
    axis.title = element_text(size = 12)
    )
```
```{r}
cor(campus)[1,2] %>% 
  as.double() %>% 
  round(.,2)
```

```{r}
campus |> 
  select(crime, police) |> 
  cor() |> 
  round(
    digits = 2
  ) |> 
  _[1, 2]
```

Alternativt

```{r}
campus |> 
  select(crime, police) |> 
  cor() |> 
  round(
    digits = 2
  ) %>%
  .[1, 2]
```

```{r}
campus |> 
  filter(police < 10) |> 
  ggplot(
    mapping = aes(
      x = police,
      y = crime
    )
  ) + 
  geom_point()  +
  xlab("Police per 1000 students") + 
  ylab("Crimes per 1000 students") +
  theme(
    axis.text = element_text(size = 16),
    axis.title=element_text(size = 18)
    )
```

```{r}
lm_police <- campus |> 
  lm(
    formula = 'crime ~ police',
    data = _
  )
```



```{r}
fitted_data <- tibble(
police = campus$police,
crime_mod = fitted(lm_police)
)

fitted_data  |> 
ggplot() + 
geom_point(
  mapping = aes(x = police, y = crime_mod), 
  size = 2
  ) +
geom_point(
  data = campus, 
  mapping = aes(x = police, y = crime), 
  colour = 'blue', 
  alpha = 0.4
  ) +
geom_abline(
  intercept = coefficients(lm_police)[1],
  slope = coefficients(lm_police)[2]
  ) +
labs(title = "Scatterplot of campus data with fitted values and regression line.") +
  theme(
    axis.text = element_text(size = 16),
    axis.title = element_text(size = 18)
    )
```

## $R^2$ 

```{r}
set.seed(2222)
df1 <- tibble(
  x = rnorm(1000, 5, 5),
  y = 100 - 1*x + 
    rnorm(1000, 0, 10)
  ) 
```

```{r}
set.seed(2222)
df2 <- tibble(
  x = rnorm(1000, 5, 5),
  y = 100 - 1*x + 
    rnorm(1000, 0, 20)
  ) 
```


```{r}
g021 <- df1 |> 
  ggplot() +
  xlim(-15,25) + 
  ylim(0, 160) +
  geom_point(
    aes(x, y), color = 'gray70', alpha = 0.5, 
    size = 2
  ) +
  stat_smooth(
    formula = 'y ~ x', data = df1, aes(x, y), 
    method = "lm", se = FALSE, color = 'pink', 
    linewidth = 2
    ) +
  labs(title = 
    as.expression(bquote(~ R^2 == ~ 
  .(round(summary(lm(y~x, df1))$r.squared, 2))))
  ) +
  theme(
    axis.text = element_text(size = 16),
    axis.title = element_text(size = 18)
    )
```

```{r}
#| warning: false
g021
```

```{r}
g007 <- df2 |> 
ggplot(mapping = aes(x = x, y = y)) +
 xlim(-15,25) + 
 ylim(0, 160) +
 geom_point(color = 'gray70', alpha = 0.5, 
  size = 2) +
 stat_smooth(formula = 'y ~ x', method = "lm", 
  se = FALSE, color = 'pink', linewidth = 2) +
 labs(title = as.expression(
  bquote(~ R^2 == ~ 
 .(round(summary(lm(y~x, df2))$r.squared, 2)))
  )
) +
  theme(
    axis.text = element_text(size = 16),
    axis.title = element_text(size = 18)
    )
```

```{r}
#| warning: false
g007
```

```{r}
#| warning: false
ggpubr::ggarrange(g021, g007, nrow = 2)
```

```{r}
lm_cars <- lm(
  formula = 'dist ~ speed', 
  data = cars)
```

```{r}
summary(lm_cars)
```

```{r}
fitted(lm_cars)
```

```{r}
-17.5791 + 3.9324 * cars$speed
```

```{r}
(mean_dist <- mean(cars$dist))
```

```{r}
# Y hat bar
mean(fitted(lm_cars))
```

